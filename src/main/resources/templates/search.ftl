package ${packageName};

import java.util.List;

import org.springframework.util.StringUtils;
import com.github.barry.akali.base.dto.BaseSearchDto;
import com.github.barry.akali.base.utils.SearchFilter;
<#if hasDateParam>
import org.springframework.format.annotation.DateTimeFormat;
import com.github.barry.akali.base.utils.IConstants;
</#if>
import lombok.Data;
import lombok.EqualsAndHashCode;
<#list imports as import>
import ${import};
</#list>

/**
 *  ${entity.className} Dto generated by auto
 * ${entity.comment}
 *
 * @author ${author}
 * @since ${date}.
 */
@Data
@EqualsAndHashCode(callSuper = false)
public class ${className} extends BaseSearchDto{


    <#if entity.fields?? && (entity.fields?size > 0)>
    <#list entity.fields as f>
    /**
     * ${f.comment}
     */
    <#if f.className == 'LocalDateTime'>
    @DateTimeFormat(pattern = IConstants.DATE_TIME_MS_FORMAT)
    </#if>
    private ${f.className} ${f.name};

    </#list>
    </#if>
    /**
     * 实现父类的查询条件过滤
     * 
     */
    @Override
    public void buildSearchParams(List<SearchFilter> searchFilterList) {
        <#if entity.fields?? && (entity.fields?size > 0)>
    <#list entity.fields as f>
    <#if f.className == "String">
        if (StringUtils.hasText(this.${f.name})) {
            super.putNoNull(SearchFilter.Operator.LIKE,"${f.name}", this.${f.name}, searchFilterList);
        }
    <#else>
        super.putNoNull(SearchFilter.Operator.EQ,"${f.name}", this.${f.name}, searchFilterList);
    </#if>
    </#list>
    </#if>
    }

}